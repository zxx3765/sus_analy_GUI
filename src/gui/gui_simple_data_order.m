function handles = gui_simple_data_order(parent, handles)
%% 简化的数据顺序设置GUI模块（美化布局版）
% 目标：更清爽的两列布局，支持缩放，统一留白与配色
%
% 输入:
%   parent - 父容器对象
%   handles - GUI句柄结构体
%
% 输出:
%   handles - 更新后的句柄结构体

    % 容器面板
    orderPanel = uipanel('Parent', parent, ...
                        'Title', '📊 数据顺序设置', ...
                        'Units', 'normalized', ...
                        'Position', [0.02, 0.02, 0.96, 0.96], ...
                        'FontSize', 10, ...
                        'FontWeight', 'bold', ...
                        'BackgroundColor', [0.98, 0.99, 0.98], ...
                        'ForegroundColor', [0.18, 0.45, 0.30]);

    % 左列：基础设置与操作
    leftPanel = uipanel('Parent', orderPanel, ...
                        'BorderType', 'none', ...
                        'Units', 'normalized', ...
                        'Position', [0.02, 0.05, 0.46, 0.90], ...
                        'BackgroundColor', [0.98, 0.99, 0.98]);

    % 顶部说明
    uicontrol('Parent', leftPanel, ...
              'Style', 'text', ...
              'Units', 'normalized', ...
              'String', ['📝 指定绘图中的特殊数据', newline, ...
                        '• 第一个: 虚线', newline, ...
                        '• 最后一个: 黑色实线', newline, ...
                        '• 其他: 自动颜色实线'], ...
              'Position', [0.00, 0.80, 1.00, 0.18], ...
              'HorizontalAlignment', 'left', ...
              'FontSize', 9, ...
              'ForegroundColor', [0.35, 0.35, 0.35], ...
              'BackgroundColor', [0.98, 0.99, 0.98]);

    % 行1：第一个数据
    uicontrol('Parent', leftPanel, ...
              'Style', 'text', ...
              'Units', 'normalized', ...
              'String', '📈 第一个数据 (虚线)', ...
              'Position', [0.00, 0.70, 0.48, 0.06], ...
              'HorizontalAlignment', 'left', ...
              'FontSize', 9, ...
              'FontWeight', 'bold', ...
              'ForegroundColor', [0.00, 0.45, 0.74], ...
              'BackgroundColor', [0.98, 0.99, 0.98]);

    handles.firstDataDropdown = uicontrol('Parent', leftPanel, ...
                                         'Style', 'popupmenu', ...
                                         'Units', 'normalized', ...
                                         'String', {'(默认第1个)', '数据1', '数据2', '数据3'}, ...
                                         'Position', [0.50, 0.70, 0.48, 0.06], ...
                                         'FontSize', 9, ...
                                         'Value', 1, ...
                                         'Callback', {@onDataOrderChange, handles});

    % 行2：最后一个数据
    uicontrol('Parent', leftPanel, ...
              'Style', 'text', ...
              'Units', 'normalized', ...
              'String', '🎯 最后数据 (黑色实线)', ...
              'Position', [0.00, 0.60, 0.48, 0.06], ...
              'HorizontalAlignment', 'left', ...
              'FontSize', 9, ...
              'FontWeight', 'bold', ...
              'ForegroundColor', [0.00, 0.00, 0.00], ...
              'BackgroundColor', [0.98, 0.99, 0.98]);

    handles.lastDataDropdown = uicontrol('Parent', leftPanel, ...
                                        'Style', 'popupmenu', ...
                                        'Units', 'normalized', ...
                                        'String', {'(默认最后1个)', '数据1', '数据2', '数据3'}, ...
                                        'Position', [0.50, 0.60, 0.48, 0.06], ...
                                        'FontSize', 9, ...
                                        'Value', 1, ...
                                        'Callback', {@onDataOrderChange, handles});

    % 行3：按钮区
    uicontrol('Parent', leftPanel, ...
              'Style', 'pushbutton', ...
              'Units', 'normalized', ...
              'String', '🚀 智能设置', ...
              'Position', [0.00, 0.50, 0.48, 0.07], ...
              'FontSize', 9, ...
              'FontWeight', 'bold', ...
              'BackgroundColor', [0.40, 0.80, 0.40], ...
              'ForegroundColor', 'white', ...
              'Callback', {@smartSetting, handles}, ...
              'TooltipString', '第1个数据设为第一个，最后1个数据设为最后一个');

    uicontrol('Parent', leftPanel, ...
              'Style', 'pushbutton', ...
              'Units', 'normalized', ...
              'String', '🔄 重置', ...
              'Position', [0.50, 0.50, 0.48, 0.07], ...
              'FontSize', 9, ...
              'BackgroundColor', [0.90, 0.90, 0.90], ...
              'Callback', {@resetSetting, handles});

    % 行4：当前设置
    uicontrol('Parent', leftPanel, ...
              'Style', 'text', ...
              'Units', 'normalized', ...
              'String', '📊 当前设置', ...
              'Position', [0.00, 0.41, 1.00, 0.05], ...
              'HorizontalAlignment', 'left', ...
              'FontSize', 9, ...
              'FontWeight', 'bold', ...
              'BackgroundColor', [0.98, 0.99, 0.98]);

    handles.orderStatusText = uicontrol('Parent', leftPanel, ...
                                       'Style', 'text', ...
                                       'Units', 'normalized', ...
                                       'String', '默认顺序', ...
                                       'Position', [0.00, 0.30, 1.00, 0.10], ...
                                       'HorizontalAlignment', 'left', ...
                                       'FontSize', 8, ...
                                       'ForegroundColor', [0.45, 0.45, 0.45], ...
                                       'BackgroundColor', [0.98, 0.99, 0.98]);

    % 行5：预览与应用
    uicontrol('Parent', leftPanel, ...
              'Style', 'pushbutton', ...
              'Units', 'normalized', ...
              'String', '👁️ 预览效果', ...
              'Position', [0.00, 0.20, 0.48, 0.08], ...
              'FontSize', 9, ...
              'FontWeight', 'bold', ...
              'BackgroundColor', [0.20, 0.60, 0.90], ...
              'ForegroundColor', 'white', ...
              'Callback', {@previewOrder, handles});

    uicontrol('Parent', leftPanel, ...
              'Style', 'pushbutton', ...
              'Units', 'normalized', ...
              'String', '✅ 应用设置', ...
              'Position', [0.50, 0.20, 0.48, 0.08], ...
              'FontSize', 9, ...
              'FontWeight', 'bold', ...
              'BackgroundColor', [0.10, 0.70, 0.10], ...
              'ForegroundColor', 'white', ...
              'Callback', {@applyOrder, handles});

    % 行6：帮助
    help_text = ['💡 使用说明', newline, ...
                 '1) 选择虚线与黑色实线对应数据', newline, ...
                 '2) 可启用右侧自定义顺序覆盖', newline, ...
                 '3) 预览确认后应用即可'];
    uicontrol('Parent', leftPanel, ...
              'Style', 'text', ...
              'Units', 'normalized', ...
              'String', help_text, ...
              'Position', [0.00, 0.03, 1.00, 0.14], ...
              'HorizontalAlignment', 'left', ...
              'FontSize', 8, ...
              'ForegroundColor', [0.35, 0.35, 0.35], ...
              'BackgroundColor', [0.98, 0.99, 0.98]);

    % 右列：自定义顺序
    customOrderPanel = uipanel('Parent', orderPanel, ...
              'Title', '📋 自定义顺序（可选）', ...
              'Units', 'normalized', ...
              'Position', [0.52, 0.05, 0.46, 0.90], ...
              'FontSize', 10, ...
              'FontWeight', 'bold', ...
              'BackgroundColor', [0.97, 0.98, 1.00]);

    handles.enableCustomOrderCheck = uicontrol('Parent', customOrderPanel, ...
              'Style', 'checkbox', ...
              'String', '启用自定义顺序（优先于左侧设置）', ...
              'Units', 'normalized', ...
              'Position', [0.02, 0.86, 0.96, 0.10], ...
              'Value', 0, ...
              'FontSize', 9, ...
              'BackgroundColor', [0.97, 0.98, 1.00]);

    handles.customOrderList = uicontrol('Parent', customOrderPanel, ...
              'Style', 'listbox', ...
              'Units', 'normalized', ...
              'Position', [0.02, 0.12, 0.70, 0.72], ...
              'FontSize', 9, ...
              'Max', 2, ...
              'Min', 0, ...
              'BackgroundColor', 'white');

    handles.btnMoveUp = uicontrol('Parent', customOrderPanel, ...
              'Style', 'pushbutton', ...
              'String', '上移', ...
              'Units', 'normalized', ...
              'Position', [0.74, 0.70, 0.24, 0.14], ...
              'FontSize', 9, ...
              'Callback', {@onCustomOrderMove, handles, 'up'});

    handles.btnMoveDown = uicontrol('Parent', customOrderPanel, ...
              'Style', 'pushbutton', ...
              'String', '下移', ...
              'Units', 'normalized', ...
              'Position', [0.74, 0.54, 0.24, 0.14], ...
              'FontSize', 9, ...
              'Callback', {@onCustomOrderMove, handles, 'down'});

    handles.btnMoveTop = uicontrol('Parent', customOrderPanel, ...
              'Style', 'pushbutton', ...
              'String', '置顶', ...
              'Units', 'normalized', ...
              'Position', [0.74, 0.38, 0.24, 0.14], ...
              'FontSize', 9, ...
              'Callback', {@onCustomOrderMove, handles, 'top'});

    handles.btnMoveBottom = uicontrol('Parent', customOrderPanel, ...
              'Style', 'pushbutton', ...
              'String', '置底', ...
              'Units', 'normalized', ...
              'Position', [0.74, 0.22, 0.24, 0.14], ...
              'FontSize', 9, ...
              'Callback', {@onCustomOrderMove, handles, 'bottom'});

    handles.btnOrderReset = uicontrol('Parent', customOrderPanel, ...
              'Style', 'pushbutton', ...
              'String', '重置顺序', ...
              'Units', 'normalized', ...
              'Position', [0.74, 0.06, 0.24, 0.12], ...
              'FontSize', 9, ...
              'Callback', {@onCustomOrderReset, handles});

    % 初始化下拉与状态显示
    if exist('updateSimpleDataOrderDropdowns', 'file') == 2
        try
            updateSimpleDataOrderDropdowns(handles);
        catch
        end
    end
    updateOrderStatus(handles);
    % 初始化自定义顺序列表
    if exist('updateCustomOrderList', 'file') == 2
        try
            updateCustomOrderList(handles);
        catch
        end
    end

end


%% 回调函数 - 数据顺序改变
function onDataOrderChange(~, ~, handles)
    handles = get(handles.fig, 'UserData');
    updateOrderStatus(handles);
    gui_utils('addLog', handles, '数据顺序设置已更新');
end

%% 智能设置
function smartSetting(~, ~, handles)
    handles = get(handles.fig, 'UserData');
    
    if ~isfield(handles, 'data') || isempty(handles.data)
        msgbox('请先导入数据', '提示', 'warn');
        return;
    end
    
    num_datasets = length(handles.data);
    
    if num_datasets >= 2
        % 第一个数据设为第一个
        set(handles.firstDataDropdown, 'Value', 2);  % 数据1
        
        % 最后一个数据设为最后一个
        set(handles.lastDataDropdown, 'Value', num_datasets + 1);  % 最后一个数据
        
        updateOrderStatus(handles);
        gui_utils('addLog', handles, '智能设置完成');
        msgbox('智能设置完成！第1个数据设为虚线，最后1个数据设为黑色实线', '智能设置', 'help');
    else
        msgbox('至少需要2个数据集才能进行智能设置', '提示', 'warn');
    end
end

%% 重置设置
function resetSetting(~, ~, handles)
    handles = get(handles.fig, 'UserData');
    
    % 重置下拉列表为默认
    set(handles.firstDataDropdown, 'Value', 1);
    set(handles.lastDataDropdown, 'Value', 1);
    
    % 重置自定义顺序
    if exist('updateCustomOrderList', 'file') == 2
        try
            updateCustomOrderList(handles);
        catch
        end
    end

    updateOrderStatus(handles);
    gui_utils('addLog', handles, '数据顺序设置已重置');
end

%% 预览效果
function previewOrder(~, ~, handles)
    handles = get(handles.fig, 'UserData');
    
    % 获取当前设置
    order_mapping = getCurrentOrderMapping(handles);
    
    try
        % 创建预览图
        figure('Name', '数据顺序预览', 'Position', [200, 200, 500, 350]);
        
        % 生成示例数据
        t = 0:0.01:3;
        num_data = 4;  % 示例4个数据
        example_labels = {'数据1', '数据2', '数据3', '数据4'};
        
        % 生成配置
        config = struct();
        config.data_order_mapping = order_mapping;
        config.debug = true;
        config.plot.figure_size = [500, 350];
        
        % 获取样式
        [line_styles, colors, line_widths] = get_simple_data_styles(example_labels, order_mapping, config);
        
        % 绘制示例
        hold on;
        for i = 1:num_data
            y = sin(2*pi*t + (i-1)*pi/4) * exp(-0.1*t);
            plot(t, y, line_styles{i}, 'LineWidth', line_widths(i), ...
                 'Color', colors(i,:), 'DisplayName', example_labels{i});
        end
        
        xlabel('时间 (s)');
        ylabel('示例信号');
        title('数据顺序样式预览');
        legend('Location', 'best');
        grid on;
        
        gui_utils('addLog', handles, '顺序预览已生成');
        
    catch ME
        gui_utils('addLog', handles, sprintf('预览生成失败: %s', ME.message));
    end
end

%% 应用设置
function applyOrder(~, ~, handles)
    handles = get(handles.fig, 'UserData');
    
    % 获取当前设置
    order_mapping = getCurrentOrderMapping(handles);
    
    % 处理自定义顺序
    try
        if isfield(handles, 'enableCustomOrderCheck') && get(handles.enableCustomOrderCheck, 'Value') == 1 ...
                && isfield(handles, 'customOrderList') && ishandle(handles.customOrderList)
            idxs = get(handles.customOrderList, 'UserData');
            if isnumeric(idxs) && ~isempty(idxs)
                handles.config.data_order_list = idxs(:)';
            end
        else
            if isfield(handles, 'config') && isfield(handles.config, 'data_order_list')
                handles.config = rmfield(handles.config, 'data_order_list');
            end
        end
    catch
    end
    
    % 保存到配置中
    if isfield(handles, 'config')
        handles.config.data_order_mapping = order_mapping;
    else
        handles.config = struct();
        handles.config.data_order_mapping = order_mapping;
    end
    
    % 更新句柄
    set(handles.fig, 'UserData', handles);
    
    updateOrderStatus(handles);
    gui_utils('addLog', handles, '数据顺序设置已应用到分析配置');
    
    if ~isempty(fieldnames(order_mapping))
        msgbox('数据顺序设置已应用！运行分析时将使用指定的样式', '应用成功', 'help');
    end
end

%% 自定义顺序移动
function onCustomOrderMove(~, ~, handles, action)
    handles = get(handles.fig, 'UserData');
    if ~isfield(handles, 'customOrderList') || ~ishandle(handles.customOrderList)
        return;
    end
    idxs = get(handles.customOrderList, 'UserData');
    sel = get(handles.customOrderList, 'Value');
    if isempty(idxs) || isempty(sel)
        return;
    end
    i = sel(1);
    switch action
        case 'up'
            if i > 1
                idxs([i-1 i]) = idxs([i i-1]);
                i = i-1;
            end
        case 'down'
            if i < numel(idxs)
                idxs([i i+1]) = idxs([i+1 i]);
                i = i+1;
            end
        case 'top'
            if i > 1
                v = idxs(i); idxs(i) = []; idxs = [v idxs]; i = 1;
            end
        case 'bottom'
            if i < numel(idxs)
                v = idxs(i); idxs(i) = []; idxs(end+1) = v; i = numel(idxs);
            end
    end
    labels = handles.labels;
    strs = arrayfun(@(k) sprintf('%d. %s', idxs(k), labels{idxs(k)}), 1:numel(idxs), 'UniformOutput', false);
    set(handles.customOrderList, 'String', strs);
    set(handles.customOrderList, 'UserData', idxs);
    set(handles.customOrderList, 'Value', i);
end

function onCustomOrderReset(~, ~, handles)
    handles = get(handles.fig, 'UserData');
    if ~isfield(handles, 'labels') || isempty(handles.labels)
        set(handles.customOrderList, 'String', {'(无数据)'});
        set(handles.customOrderList, 'UserData', []);
        return;
    end
    labels = handles.labels;
    idxs = 1:numel(labels);
    strs = arrayfun(@(i) sprintf('%d. %s', i, labels{i}), idxs, 'UniformOutput', false);
    set(handles.customOrderList, 'String', strs);
    set(handles.customOrderList, 'UserData', idxs);
    set(handles.customOrderList, 'Value', 1);
end

%% 获取当前顺序设置
function order_mapping = getCurrentOrderMapping(handles)
    order_mapping = struct();
    
    % 第一个数据
    first_val = get(handles.firstDataDropdown, 'Value');
    if first_val > 1
        order_mapping.first_index = first_val - 1;
    end
    
    % 最后一个数据
    last_val = get(handles.lastDataDropdown, 'Value');
    if last_val > 1
        order_mapping.last_index = last_val - 1;
    end
end

%% 更新状态显示
function updateOrderStatus(handles)
    order_mapping = getCurrentOrderMapping(handles);
    
    status_lines = {};
    
    if isfield(order_mapping, 'first_index')
        status_lines{end+1} = sprintf('📈 第一个: 数据%d (虚线)', order_mapping.first_index);
    else
        status_lines{end+1} = '📈 第一个: 默认第1个 (虚线)';
    end
    
    if isfield(order_mapping, 'last_index')
        status_lines{end+1} = sprintf('🎯 最后一个: 数据%d (黑色)', order_mapping.last_index);
    else
        status_lines{end+1} = '🎯 最后一个: 默认最后1个 (黑色)';
    end
    
    status_lines{end+1} = '🌈 其他: 自动颜色实线';
    
    status_text = strjoin(status_lines, newline);
    set(handles.orderStatusText, 'String', status_text);
end
